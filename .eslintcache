[{"/home/ykorolikhin/my_project/marketplace/api/test.ts":"1","/home/ykorolikhin/my_project/marketplace/eslint.config.mjs":"2"},{"size":974,"mtime":1745409151242,"results":"3","hashOfConfig":"4"},{"size":9184,"mtime":1745409194660,"results":"5","hashOfConfig":"6"},{"filePath":"7","messages":"8","suppressedMessages":"9","errorCount":12,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1c2cngc",{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"15xytnr","/home/ykorolikhin/my_project/marketplace/api/test.ts",["13","14","15","16","17","18","19","20","21","22","23","24","25","26"],[],"/home/ykorolikhin/my_project/marketplace/eslint.config.mjs",[],[],{"ruleId":"27","severity":2,"message":"28","line":9,"column":7,"nodeType":null,"messageId":"29","endLine":9,"endColumn":21},{"ruleId":"27","severity":2,"message":"30","line":10,"column":7,"nodeType":null,"messageId":"29","endLine":10,"endColumn":10},{"ruleId":"31","severity":1,"message":"32","line":10,"column":12,"nodeType":"33","messageId":"34","endLine":10,"endColumn":15,"suggestions":"35"},{"ruleId":"27","severity":2,"message":"36","line":13,"column":7,"nodeType":null,"messageId":"29","endLine":13,"endColumn":20},{"ruleId":"37","severity":1,"message":"38","line":16,"column":5,"nodeType":"39","messageId":"40","endLine":16,"endColumn":13},{"ruleId":"41","severity":2,"message":"42","line":16,"column":7,"nodeType":"39","messageId":"40","endLine":16,"endColumn":9},{"ruleId":"43","severity":2,"message":"44","line":17,"column":5,"nodeType":"45","messageId":"40","endLine":17,"endColumn":16,"suggestions":"46"},{"ruleId":"27","severity":2,"message":"47","line":21,"column":7,"nodeType":null,"messageId":"29","endLine":21,"endColumn":24},{"ruleId":"43","severity":2,"message":"44","line":26,"column":9,"nodeType":"45","messageId":"40","endLine":26,"endColumn":20,"suggestions":"48"},{"ruleId":"27","severity":2,"message":"49","line":31,"column":10,"nodeType":null,"messageId":"29","endLine":31,"endColumn":25},{"ruleId":"50","severity":2,"message":"51","line":33,"column":5,"nodeType":"52","messageId":"53","endLine":33,"endColumn":43},{"ruleId":"43","severity":2,"message":"44","line":33,"column":5,"nodeType":"45","messageId":"40","endLine":33,"endColumn":16,"suggestions":"54"},{"ruleId":"27","severity":2,"message":"55","line":37,"column":7,"nodeType":null,"messageId":"29","endLine":37,"endColumn":19},{"ruleId":"27","severity":2,"message":"56","line":38,"column":7,"nodeType":null,"messageId":"29","endLine":38,"endColumn":19},"@typescript-eslint/no-unused-vars","'unusedVariable' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.","unusedVar","'obj' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["57","58"],"'incorrectType' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.","no-constant-condition","Unexpected constant condition.","BinaryExpression","unexpected","eqeqeq","Expected '===' and instead saw '=='.","no-console","Unexpected console statement.","MemberExpression",["59"],"'missingTerminator' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.",["60"],"'unreachableCode' is defined but never used. Allowed unused vars must match /(^_|Fields$)/u.","no-unreachable","Unreachable code.","ExpressionStatement","unreachableCode",["61"],"'singleQuotes' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.","'doubleQuotes' is assigned a value but never used. Allowed unused vars must match /(^_|Fields$)/u.",{"messageId":"62","fix":"63","desc":"64"},{"messageId":"65","fix":"66","desc":"67"},{"fix":"68","messageId":"69","data":"70","desc":"71"},{"fix":"72","messageId":"69","data":"73","desc":"71"},{"fix":"74","messageId":"69","data":"75","desc":"71"},"suggestUnknown",{"range":"76","text":"77"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"78","text":"79"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"80","text":"81"},"removeConsole",{"propertyName":"82"},"Remove the console.log().",{"range":"83","text":"81"},{"propertyName":"82"},{"range":"84","text":"81"},{"propertyName":"82"},[270,273],"unknown",[270,273],"never",[422,482],"","log",[583,625],[704,742]]